<?phpif (!defined('BASEPATH'))    exit('No direct script access allowed');function _generated(){    $chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!?@#$%&*[]{}();:,<>~+=-_/|\\'; // набор символов    $max = 4;    $size = StrLen($chars) - 1;    $hash = null;    while ($max--)    {        $hash .= $chars[rand(0, $size)];    }    return $hash;}class Index_page extends CI_Controller{    public function index()    {        $this->load->view('index_page/index_head_view');        $this->load->view('index_page/index_footer_view');    }    public function vk_auth()    {        $this->output->enable_profiler(TRUE);        if ($this->input->get('code'))        {            $url = "https://oauth.vk.com/access_token?client_id=3334691&client_secret=AksbbKoXGn8zBoLGVwcw&code=" . $this->input->get('code') . "&redirect_uri=http://000.dn/index_page/vk_auth/";            $res = curl_init($url);            curl_setopt($res, CURLOPT_RETURNTRANSFER, 1);            curl_exec($res);            $httpcode = curl_getinfo($res, CURLINFO_HTTP_CODE);            $json     = curl_multi_getcontent($res);            $response = json_decode($json);            if (isset($response->error) or $httpcode <> 200)            {                die($response->error_description);            }            //print_r($response);            $this->db->where('login', $response->user_id);            $this->db->where('platform','vk');            $result = $this->db->get('users')->row_array();            if (count($result) == 0) //Пользователь новый            {                $url = "https://api.vk.com/method/getProfiles?fields=bdate,city,country,sex&uid=" . $response->user_id . "&access_token=" . $response->access_token;                $res = curl_init($url);                curl_setopt($res, CURLOPT_RETURNTRANSFER, 1);                curl_exec($res);                //$errcode=curl_getinfo($res,CURLINFO_HTTP_CODE);                $getProfiles = json_decode(curl_multi_getcontent($res));                $getProfiles = $getProfiles->response[0];                //print_r($getProfiles);                $url = "https://api.vk.com/method/places.getCityById?cids=" . $getProfiles->city . "&access_token=" . $response->access_token;                $res = curl_init($url);                curl_setopt($res, CURLOPT_RETURNTRANSFER, 1);                curl_exec($res);                $getCityById = json_decode(curl_multi_getcontent($res));                //print_r($getCityById);                $url = "https://api.vk.com/method/places.getCountryById?cids=" . $getProfiles->country . "&access_token=" . $response->access_token;                $res = curl_init($url);                curl_setopt($res, CURLOPT_RETURNTRANSFER, 1);                curl_exec($res);                $getCountryById = json_decode(curl_multi_getcontent($res));                //print_r($getCountryById);                $data = array(                    'name' => $getProfiles->first_name,                    'surname' => $getProfiles->last_name,                    'gender' => $getProfiles->sex                );                if (isset($getProfiles->bdate))                {                    $dmy = explode('.', $getProfiles->bdate);                    if (count($dmy) === 2)                    {                        $data['d'] = $dmy[0];                        $data['m'] = $dmy[1];                    }                    elseif (count($dmy) === 3)                    {                        $data['d'] = $dmy[0];                        $data['m'] = $dmy[1];                        $data['y'] = $dmy[2];                    }                    else                    {                        $data['day'] = $data['month'] = $data['year'] = '';                    }                }                if (isset($getCountryById->response[0]->name) or isset($getCityById->response[0]->name))                {                    $data['location'] = $getCountryById->response[0]->name . " " . $getCityById->response[0]->name;                }                $this->load->view('index_page/vkuserreg_view', $data);                //echo "<pre>";                //print_r($data);                $this->session->set_userdata('vk_uid', $getProfiles->uid);                //$this->db->insert();            }            else            {				$this->session->set_userdata("id_user",$result['id_user']);				$this->session->set_userdata("login",$result['name']." ".$result['surname']);			}        }        $info_msg = null;        if ($this->input->post() and $this->session->userdata('vk_uid'))        {            if ($this->input->post('email'))            {			if ($this->input->post('day') and $this->input->post('month') and $this->input->post('year'))            {                if ($this->input->post('year') <> "0000" and $this->input->post('month') <> "0" and $this->input->post('day') <> "0")                {                    $postdate    = mktime(0, 0, 0, $this->input->post('month'), $this->input->post('day'), $this->input->post('year'));                    $currentdate = mktime(0, 0, 0, date('m'), date('d'), date('Y'));                    if ((checkdate($this->input->post('month'), $this->input->post('day'), $this->input->post('year')) == false) or ($postdate > $currentdate))                    {                        $info_msg[] = "Неверная дата1";                    }                    if (checkdate($this->input->post('month'), $this->input->post('day'), "2012") == false and checkdate($this->input->post('month'), $this->input->post('day'), "2011") == false)                    {                        $info_msg[] = "Неверная дата2";                    }                }                if (($this->input->post('month') == 0 xor $this->input->post('day') == 0) or ($this->input->post('month') == 0 and $this->input->post('day') == 0 and ($this->input->post('year') <> 0000)))                {                    $info_msg[] = "Для указания даты введите хотябы месяц и день";                }            }            else            {                $info_msg[] = "Неверная дата";            }                        if (strlen($this->input->post('location')) > 1000)            {                $info_msg[] = "Максимальное значение поля \"Местонахождение\" 1000 символов";            }            if (strlen($this->input->post('about')) > 1000)            {                $info_msg[] = "Максимальное значение поля \"О себе\" 1000 символов";            }                if (filter_var($this->input->post('email'), FILTER_VALIDATE_EMAIL) <> $this->input->post('email'))                {                    $info_msg[] = "Неверный email";                }                else                {                    $this->db->where('email', $this->input->post('email'));                    $query = $this->db->get('users');                    if ($query->num_rows() > 0)                    {                        $info_msg[] = "Пользователь с таким email уже существует";                    }                }            }            else            {                $info_msg[] = "Введите email";            }            if ($this->input->post('name'))            {                if (strlen($this->input->post('name')) > 255)                {                    $info_msg[] = "Длина имени более 255 символов";                }            }            else            {                $info_msg[] = "Введите имя";            }            if ($this->input->post('surname'))            {                if (strlen($this->input->post('surname')) > 255)                {                    $info_msg[] = "Длина фамилии более 255 символов";                }            }            else            {                $info_msg[] = "Введите фамилию";            }        if (is_array($info_msg))        {            $data = array(                'name' => $this->input->post('name'),                'surname' => $this->input->post('surname'),                'email' => $this->input->post('email'),                'info_msg' => $info_msg,                'd'=>$this->input->post('day'),                'm'=>$this->input->post('month'),                'y'=>$this->input->post('year'),                'gender'=>$this->input->post('gender'),                'location'=>$this->input->post('location'),                'about'=>$this->input->post('about')            );            $this->load->view('index_page/vkuserreg_view', $data);        }        if ($info_msg === null)        {			    if ($this->input->post('year') == 0000 and $this->input->post('month') <> 0 and $this->input->post('day') <> 0)                {                    $date = "0000-" . $this->input->post('month') . "-" . $this->input->post('day');                }                if ($this->input->post('year') == 0000 and $this->input->post('month') == 0 and $this->input->post('day') == 0)                {                    $date = "0000-00-00";                }                if ($this->input->post('year') <> 0000 and $this->input->post('month') <> 0 and $this->input->post('day') <> 0)                {                    $date = $this->input->post('year') . "-" . $this->input->post('month') . "-" . $this->input->post('day');                }                if($this->input->post('gender')==="0")                {				$gender='n/a';				}                elseif($this->input->post('gender')==="1")                {				$gender='w';				}                elseif($this->input->post('gender')==="2")                {				$gender='m';				}            $user_data = array(				'login'=>$this->session->userdata('vk_uid'),                'name' => htmlspecialchars($this->input->post('name')),                'birthday' => $date,                'gender' => $gender,                'surname' => htmlspecialchars($this->input->post('surname')),                'email' => $this->input->post('email'),                'location' => htmlspecialchars($this->input->post('location')),                'about' => htmlspecialchars($this->input->post('about')),                'platform'=>'vk'            );            if ($this->db->insert('users', $user_data))            {                echo "ok";            }        }        }    }    public function auth()    {        if ($this->input->post('login') and $this->input->post('pass'))        {            if ($this->input->post('remember') == "on")            {                $remember = true;            }            else            {                $remember = false;            }            $this->db->where('login', $this->input->post('login'));            $query     = $this->db->select('password,hash,id_user');            $query     = $this->db->get('users');            $result = $query->row_array();            if ($result['password'] == sha1(md5(trim($this->input->post('pass')) . $result['hash'])))            {                $authdata = array(                    'remember' => $remember,                    'id_user' => $result['id_user'],                    'login'=>$this->input->post('login')                );                $this->session->set_userdata($authdata);                if ($this->session->userdata('redirect'))                {                    header("Location: " . $this->session->userdata('redirect'));                }                else                {                    header("Location: /");                }                $this->session->unset_userdata('redirect');            }            else            {                $info_msg['error_msg'] = "Неправильный логин или пароль, попробуйте еще раз:";                $this->load->view('/index_page/loginpage_view', $info_msg);            }        }        else        {            $this->load->view('/index_page/loginpage_view');        }    }    public function logout()    {        $this->session->sess_destroy();        header("Location: /");    }    public function registration()    {        $info_msg = null;        if ($this->input->post())        {            if ($this->input->post('login'))            {                if (preg_match("/^[a-z0-9A-Z-_]+$/", $this->input->post('login')))                {                    $this->db->where('login', $this->input->post('login'));                    $query = $this->db->get('users');                    if ($query->num_rows() > 0)                    {                        $info_msg[] = "Пользователь с таким логином уже существует";                    }                }                else                {                    $info_msg[] = "Логин может состоять только из цифр и латинских символов и символов \"_\" и \"-\"";                }            }            else            {                $info_msg[] = "Введите логин";            }            if ($this->input->post('email'))            {                if (filter_var($this->input->post('email'), FILTER_VALIDATE_EMAIL) <> $this->input->post('email'))                {                    $info_msg[] = "Неверный email";                }                else                {                    $this->db->where('email', $this->input->post('email'));                    $query = $this->db->get('users');                    if ($query->num_rows() > 0)                    {                        $info_msg[] = "Пользователь с таким email уже существует";                    }                }            }            else            {                $info_msg[] = "Введите email";            }            if ($this->input->post('name'))            {                if (strlen($this->input->post('name')) > 255)                {                    $info_msg[] = "Длина имени более 255 символов";                }            }            else            {                $info_msg[] = "Введите имя";            }            if ($this->input->post('surname'))            {                if (strlen($this->input->post('surname')) > 255)                {                    $info_msg[] = "Длина фамилии более 255 символов";                }            }            else            {                $info_msg[] = "Введите фамилию";            }            if ($this->input->post('pass'))            {                if ($this->input->post('pass') <> $this->input->post('pass2'))                {                    $info_msg[] = "Пароль и подтверждение не совпадают";                }            }            else            {                $info_msg[] = "Введите пароль";            }            if (!$this->input->post('pass2'))            {                $info_msg[] = "Введите подтверждение пароля";            }            if ($info_msg == null)            {                $info_msg = "ok";            }        }        if (!$this->input->post() or is_array($info_msg))        {            $data = array(                'login' => $this->input->post('login'),                'name' => $this->input->post('name'),                'surname' => $this->input->post('surname'),                'email' => $this->input->post('email'),                'info_msg' => $info_msg            );            $this->load->view('index_page/registration_view', $data);        }        if ($info_msg == "ok")        {            $hash      = _generated();            $sha1_pass = sha1(md5(trim($this->input->post('pass')) . $hash));            $user_data = array(                'login' => $this->input->post('login'),                'name' => $this->input->post('name'),                'surname' => $this->input->post('surname'),                'email' => $this->input->post('email'),                'password' => $sha1_pass,                'hash' => $hash            );            if ($this->db->insert('users', $user_data))            {                echo "ok";            }        }    }}?>